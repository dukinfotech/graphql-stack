version: "3.9"

services:
  database:
    container_name: database
    image: postgres:15.2
    restart: always
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:v2.35.1
    restart: always
    environment:
      HASURA_GRAPHQL_MIGRATIONS_DIR: /graphql-engine/migration
      HASURA_GRAPHQL_METADATA_DIR: /graphql-engine/metadata
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@database:${DB_PORT}/${DB_NAME}"
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      HASURA_GRAPHQL_ENABLE_CONSOLE: false
      HASURA_GRAPHQL_DEV_MODE: false
    ports:
      - "8080:8888"
    depends_on:
      database:
        condition: service_healthy
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_HOST: database
      DB_NAME: $DB_NAME
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
    ports:
      - "8080:8080"
volumes:
  volume_postgres:
  volume_pgadmin: